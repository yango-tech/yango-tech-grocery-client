[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "yango-tech-grocery-client"
version = "1.0.0"
description = "A Python client library for interacting with the Yango Tech Grocery API"
license = "MIT"
readme = "README.md"
homepage = "https://github.com/yango-tech/yango-tech-grocery-client"
repository = "https://github.com/yango-tech/yango-tech-grocery-client"
documentation = "https://github.com/yango-tech/yango-tech-grocery-client#readme"
keywords = ["yango", "grocery", "api", "client", "delivery", "ecommerce"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "yango_tech_grocery_client"}]
include = [
    "LICENSE",
    "README.md",
    "yango_tech_grocery_client/py.typed",
]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.12.0"
dacite = "^1.9.0"
yarl = "^1.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-asyncio = "^1.1.0"
ruff = "^0.13.3"
mypy = "^1.17.1"
twine = "^6.1.0"
build = "^1.3.0"


[tool.poetry.urls]
"Bug Tracker" = "https://github.com/yango-tech/yango-tech-grocery-client/issues"

[tool.poetry.scripts]
yango-grocery-client = "yango_grocery_client.cli:main"

[tool.ruff]
target-version = "py310"
line-length = 120
fix = true
show-fixes = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "PIE",  # flake8-pie
    "RET",  # flake8-return
    "TCH",  # flake8-type-checking
]
ignore = [
    "N818",  # Exception name should be named with an Error suffix
    "SIM117",  # Nested with statements are more readable for async context managers
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/*" = ["S101"]      # assert allowed in tests
"yango_tech_grocery_client/schema.py" = ["N815"]  # mixedCase variable names from API schema

[tool.ruff.lint.isort]
known-first-party = ["yango_tech_grocery_client"]
combine-as-imports = true
force-wrap-aliases = true
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aiohttp.*",
    "dacite.*",
    "yarl.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=yango_grocery_client",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"
